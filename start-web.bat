@echo off
REM üöÄ AI-Reasoning-Lab Web Interface Launcher (Windows)
REM –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π

echo üöÄ –ó–∞–ø—É—Å–∫ AI-Reasoning-Lab Web Interface...
echo ===========================================

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
docker --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose
docker compose version >nul 2>&1
if errorlevel 1 (
    REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏ docker-compose
    docker-compose --version >nul 2>&1
    if errorlevel 1 (
        echo ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
        pause
        exit /b 1
    ) else (
        set DOCKER_COMPOSE_CMD=docker-compose
    )
) else (
    set DOCKER_COMPOSE_CMD=docker compose
)

echo ‚úÖ Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose.yml
if not exist "docker-compose.yml" (
    echo ‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    echo –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ AI-Reasoning-Lab
    pause
    exit /b 1
)

echo ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã

REM –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not exist ".env" (
    echo üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞...
    echo # AI-Reasoning-Lab Configuration > .env
    echo PROJECT_ROOT=/app >> .env
    echo. >> .env
    echo # Model Configuration (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) >> .env
    echo OPENAI_API_KEY=your-openai-key-here >> .env
    echo ANTHROPIC_API_KEY=your-anthropic-key-here >> .env
    echo. >> .env
    echo # Test Configuration >> .env
    echo BC_MODELS_0_NAME=gpt-4 >> .env
    echo BC_MODELS_0_PROVIDER=openai >> .env
    echo BC_TESTS_TO_RUN=["t01_simple_logic", "t02_instructions"] >> .env
    echo ‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª (–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ API –∫–ª—é—á–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
)

echo.
echo üîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...
echo –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
echo.

REM –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
%DOCKER_COMPOSE_CMD% up -d

echo.
echo üéâ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—É—â–µ–Ω!
echo ==========================
echo.
echo üì± –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:
echo    üåê Frontend:     http://localhost:5173
echo    üîå Backend API:  http://localhost:8000
echo    üìö API Docs:     http://localhost:8000/docs
echo    üîÑ ReDoc:        http://localhost:8000/redoc
echo.
echo üõ†Ô∏è  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:
echo    –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:     %DOCKER_COMPOSE_CMD% down
echo    –õ–æ–≥–∏:           %DOCKER_COMPOSE_CMD% logs -f
echo    –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å:  %DOCKER_COMPOSE_CMD% restart
echo.
echo üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:
echo    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: %DOCKER_COMPOSE_CMD% ps
echo    Health check:     curl http://localhost:8000/health
echo.
echo üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo    start-web.bat              # –ó–∞–ø—É—Å–∫
echo    %DOCKER_COMPOSE_CMD% down  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
echo    %DOCKER_COMPOSE_CMD% logs -f backend  # –õ–æ–≥–∏ backend
echo.
echo üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
echo    –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:     QUICKSTART_WEB.md
echo    Production:        PRODUCTION_DEPLOYMENT.md
echo    API —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è:  docs/web_interface_spec.md
echo.
echo üéØ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI-Reasoning-Lab!

pause