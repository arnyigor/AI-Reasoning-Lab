#!/usr/bin/env python3
"""
üöÄ AI-Reasoning-Lab Web Interface Launcher
–ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π)
"""

import os
import sys
import subprocess
import platform
import time
from pathlib import Path

def check_docker():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker"""
    try:
        result = subprocess.run(['docker', '--version'],
                              capture_output=True, text=True, check=True)
        print("‚úÖ Docker –Ω–∞–π–¥–µ–Ω")
        return True
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return False

def check_docker_compose():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã"""
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
    try:
        result = subprocess.run(['docker', 'compose', 'version'],
                              capture_output=True, text=True, check=True)
        print("‚úÖ Docker Compose (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è) –Ω–∞–π–¥–µ–Ω")
        return 'docker compose'
    except (subprocess.CalledProcessError, FileNotFoundError):
        pass

    # –ü—Ä–æ–±—É–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–º–∞–Ω–¥—É
    try:
        result = subprocess.run(['docker-compose', '--version'],
                              capture_output=True, text=True, check=True)
        print("‚úÖ Docker Compose (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è) –Ω–∞–π–¥–µ–Ω")
        return 'docker-compose'
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return None

def create_env_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    env_path = Path('.env')
    if not env_path.exists():
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞...")

        env_content = """# AI-Reasoning-Lab Configuration
PROJECT_ROOT=/app

# Model Configuration (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
OPENAI_API_KEY=your-openai-key-here
ANTHROPIC_API_KEY=your-anthropic-key-here

# Test Configuration
BC_MODELS_0_NAME=gpt-4
BC_MODELS_0_PROVIDER=openai
BC_TESTS_TO_RUN=["t01_simple_logic", "t02_instructions"]
"""

        env_path.write_text(env_content, encoding='utf-8')
        print("‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª (–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ API –∫–ª—é—á–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)")

def check_config_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = ['docker-compose.yml']

    for file in required_files:
        if not Path(file).exists():
            print(f"‚ùå –§–∞–π–ª {file} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
            print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ AI-Reasoning-Lab")
            return False

    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    return True

def run_services(docker_compose_cmd):
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("\nüîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...")
    print("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ")
    print()

    try:
        # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        result = subprocess.run([docker_compose_cmd, 'up', '-d'],
                              check=True, capture_output=True, text=True)

        print("\nüéâ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—É—â–µ–Ω!")
        print("=" * 27)
        print()
        print("üì± –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:")
        print("   üåê Frontend:     http://localhost:5173")
        print("   üîå Backend API:  http://localhost:8000")
        print("   üìö API Docs:     http://localhost:8000/docs")
        print("   üîÑ ReDoc:        http://localhost:8000/redoc")
        print()
        print("üõ†Ô∏è  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:")
        print(f"   –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:     {docker_compose_cmd} down")
        print(f"   –õ–æ–≥–∏:           {docker_compose_cmd} logs -f")
        print(f"   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å:  {docker_compose_cmd} restart")
        print()
        print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:")
        print(f"   –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: {docker_compose_cmd} ps")
        print("   Health check:     curl http://localhost:8000/health")
        print()
        print("üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   python start-web.py              # –ó–∞–ø—É—Å–∫")
        print(f"   {docker_compose_cmd} down        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞")
        print(f"   {docker_compose_cmd} logs -f backend  # –õ–æ–≥–∏ backend")
        print()
        print("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
        print("   –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:     QUICKSTART_WEB.md")
        print("   Production:        PRODUCTION_DEPLOYMENT.md")
        print("   API —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è:  docs/web_interface_spec.md")
        print()
        print("üéØ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI-Reasoning-Lab!")

        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        if e.stdout:
            print(f"stdout: {e.stdout}")
        if e.stderr:
            print(f"stderr: {e.stderr}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ AI-Reasoning-Lab Web Interface...")
    print("=" * 43)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not check_docker():
        sys.exit(1)

    docker_compose_cmd = check_docker_compose()
    if not docker_compose_cmd:
        sys.exit(1)

    if not check_config_files():
        sys.exit(1)

    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    create_env_file()

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    if run_services(docker_compose_cmd):
        print("\n" + "="*50)
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã!")
        print("–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5173 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("="*50)
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã")
        sys.exit(1)

if __name__ == "__main__":
    main()