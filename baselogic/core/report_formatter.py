from typing import Dict, Any, List
import pandas as pd

class ReportFormatter:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏"""
    
    @staticmethod
    def format_leaderboard_table(data: pd.DataFrame) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤ —Å —ç–º–æ–¥–∑–∏ –∏ —Ü–≤–µ—Ç–∞–º–∏"""
        formatted_data = data.copy()
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–Ω–≥–æ–≤
        formatted_data['–†–∞–Ω–≥'] = formatted_data['Score'].rank(ascending=False).astype(int)
        formatted_data['üèÜ'] = formatted_data['–†–∞–Ω–≥'].apply(
            lambda x: 'ü•á' if x == 1 else 'ü•à' if x == 2 else 'ü•â' if x == 3 else f'#{x}'
        )
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã
        formatted_data['–¢–æ—á–Ω–æ—Å—Ç—å'] = formatted_data['Accuracy'].apply(
            lambda x: f"{x:.1%}" if pd.notna(x) else "N/A"
        )
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
        formatted_data['–í—Ä–µ–º—è'] = formatted_data['Avg_Time_ms'].apply(
            lambda x: f"{x/1000:.1f}—Å" if pd.notna(x) else "N/A"
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        table = formatted_data[['üèÜ', '–ú–æ–¥–µ–ª—å', '–¢–æ—á–Ω–æ—Å—Ç—å', '–í—Ä–µ–º—è', '–ó–∞–ø—É—Å–∫–æ–≤']].to_string(
            index=False,
            justify='center'
        )
        
        return f"""
# üèÜ –¢–∞–±–ª–∏—Ü–∞ –õ–∏–¥–µ—Ä–æ–≤

*–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {pd.Timestamp.now().strftime('%Y-%m-%d %H:%M:%S')}*

```
{table}
```

### –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

{ReportFormatter._generate_detailed_stats(data)}
"""
    
    @staticmethod
    def _generate_detailed_stats(data: pd.DataFrame) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        stats = []
        
        # –õ—É—á—à–∞—è –º–æ–¥–µ–ª—å
        best_model = data.loc[data['Score'].idxmax()]
        stats.append(f"**üèÜ –õ—É—á—à–∞—è –º–æ–¥–µ–ª—å:** {best_model['–ú–æ–¥–µ–ª—å']} (Score: {best_model['Score']:.3f})")
        
        # –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å
        avg_accuracy = data['Accuracy'].mean()
        stats.append(f"**üìä –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å:** {avg_accuracy:.1%}")
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
        stats.append(f"**üî¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –º–æ–¥–µ–ª–µ–π:** {len(data)}")
        
        return "\n".join(stats)