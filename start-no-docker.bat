@echo off
REM üöÄ AI-Reasoning-Lab No-Docker Launcher (Windows)
REM –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ë–ï–ó Docker

echo üöÄ –ó–∞–ø—É—Å–∫ AI-Reasoning-Lab Web Interface (–ë–ï–ó Docker)...
echo ========================================================

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.9+ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    echo    –°–∫–∞—á–∞–π—Ç–µ —Å: https://python.org
    pause
    exit /b 1
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
for /f "tokens=2" %%i in ('python --version 2^>^&1') do set PYTHON_VERSION=%%i
echo ‚úÖ Python %PYTHON_VERSION% –Ω–∞–π–¥–µ–Ω

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
node --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    echo    –°–∫–∞—á–∞–π—Ç–µ —Å: https://nodejs.org
    pause
    exit /b 1
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
for /f "tokens=1 delims=v." %%i in ('node --version') do set NODE_MAJOR=%%i
if %NODE_MAJOR% lss 18 (
    echo ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 18+. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: v%NODE_MAJOR%
    pause
    exit /b 1
)

echo ‚úÖ Node.js v%NODE_MAJOR% –Ω–∞–π–¥–µ–Ω

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è npm
npm --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω. –û–±—ã—á–Ω–æ –∏–¥–µ—Ç –≤–º–µ—Å—Ç–µ —Å Node.js.
    pause
    exit /b 1
)

echo ‚úÖ npm –Ω–∞–π–¥–µ–Ω

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Poetry
poetry --version >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  Poetry –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...
    curl -sSL https://install.python-poetry.org ^| python -
    if errorlevel 1 (
        echo ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Poetry. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:
        echo    curl -sSL https://install.python-poetry.org ^| python -
        pause
        exit /b 1
    )
)

echo ‚úÖ Poetry –Ω–∞–π–¥–µ–Ω

REM –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not exist ".env" (
    echo üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞...
    echo # AI-Reasoning-Lab Configuration > .env
    echo PROJECT_ROOT=. >> .env
    echo. >> .env
    echo # Model Configuration (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) >> .env
    echo OPENAI_API_KEY=your-openai-key-here >> .env
    echo ANTHROPIC_API_KEY=your-anthropic-key-here >> .env
    echo. >> .env
    echo # Test Configuration >> .env
    echo BC_MODELS_0_NAME=gpt-4 >> .env
    echo BC_MODELS_0_PROVIDER=openai >> .env
    echo BC_TESTS_TO_RUN=["t01_simple_logic", "t02_instructions"] >> .env
    echo ‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª (–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ API –∫–ª—é—á–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
)

echo.
echo üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend...
echo =======================

REM –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend
cd web\backend

REM –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not exist "venv" (
    echo üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
    python -m venv venv
)

REM –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
call venv\Scripts\activate.bat

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend...
python -m pip install --upgrade pip
poetry install

echo.
echo üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend...
echo ========================

REM –í–æ–∑–≤—Ä–∞—Ç –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd ..\..

REM –ù–∞—Å—Ç—Ä–æ–π–∫–∞ frontend
cd web\frontend

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend...
npm install

REM –í–æ–∑–≤—Ä–∞—Ç –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd ..\..

echo.
echo üéØ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...
echo ====================

REM –ó–∞–ø—É—Å–∫ backend –≤ —Ñ–æ–Ω–µ
echo üöÄ –ó–∞–ø—É—Å–∫ Backend (FastAPI)...
start "AI-Reasoning-Lab Backend" cmd /c "cd web\backend && call venv\Scripts\activate.bat && poetry run python -m app.main"

REM –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ backend
timeout /t 5 /nobreak >nul

REM –ó–∞–ø—É—Å–∫ frontend –≤ —Ñ–æ–Ω–µ
echo üöÄ –ó–∞–ø—É—Å–∫ Frontend (React)...
start "AI-Reasoning-Lab Frontend" cmd /c "cd web\frontend && npm run dev"

echo.
echo üéâ AI-Reasoning-Lab –∑–∞–ø—É—â–µ–Ω!
echo ============================
echo.
echo üì± –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:
echo    üåê Frontend:     http://localhost:5173
echo    üîå Backend API:  http://localhost:8000
echo    üìö API Docs:     http://localhost:8000/docs
echo    üîÑ ReDoc:        http://localhost:8000/redoc
echo.
echo üõ†Ô∏è  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:
echo    –ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
echo    –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á
echo.
echo üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏:
echo    Backend:  –ò—â–∏—Ç–µ "AI-Reasoning-Lab Backend" –≤ –î–∏—Å–ø–µ—Ç—á–µ—Ä–µ –∑–∞–¥–∞—á
echo    Frontend: –ò—â–∏—Ç–µ "AI-Reasoning-Lab Frontend" –≤ –î–∏—Å–ø–µ—Ç—á–µ—Ä–µ –∑–∞–¥–∞—á
echo.
echo üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
echo    –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:     QUICKSTART_WEB.md
echo    –ë–µ–∑ Docker:        NO_DOCKER_SETUP.md
echo    Production:        PRODUCTION_DEPLOYMENT.md
echo.
echo üéØ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI-Reasoning-Lab!
echo.
echo üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5173 –≤ –±—Ä–∞—É–∑–µ—Ä–µ

pause